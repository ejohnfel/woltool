#!/bin/bash

declare -a entries
declare -a targets
declare -a groups
declare -a hosts
declare -a waithosts

#SYSTEMDB="/usr/local/lib/wolablehosts"
SYSTEMDB="/opt/scripts/.wolablehosts"
WAKE="wakeonlan"
PingWait=0
wakecount=0
targetfile=""

# Show Usage
function Usage()
{
	echo -e "========================"
	echo -e "WOL : WOL Scripting Tool"
	echo -e "========================"
	echo -e "This tools looks for a list of hosts in ~/.wolablehosts"
	echo -e "Each line is an entry of the format 'hostname MACAddress group [ip|dns]'"
	echo -e "Where MACAddress if the format 'AA:BB:CC:DD:EE:FF'"
	echo -e "\n"
	echo -e "wol list\tList known hosts"
	echo -e "wol group [grp]\tWake all hosts in group"
	echo -e "wol host [host]\tWake host (Host is optional and the default)"
	echo -e "wol all\t\tTo wake all hosts in the file"
	echo -e "wol hostname\tTo wake only the given host"
	echo -e "wol wait [other options]\tOnce WOLed, wait up to 3m for host to start pinging"
	echo -e "wol help\tThis message"
	echo -e "wol -h\t\tThis message"
	echo -e "\nYou can place multiple group and host options on the commandline"
}

# Convert: Convert Old Format To New Format
# Input Parameters: [oldfile]
function ConvertFile()
{
	TMP="/tmp/convert.${RANDOM}"
	while read host group mac rem; do
		echo -e "${host} ${mac} ${group}" >> ${TMP}
	done < "$1"

	pth=$(dirname "$1")
	base=$(basename "$1")
	mv "$1" "${pth}/${base}.bck"
	mv "${TMP}" "$1"
}

# Find WOL Tool Binary
function FindTool()
{
	${WAKE} -v > /dev/null

	if [ $? = 0 -o $? = 1 ]; then
		echo -n ""
	else
		etherwake -V > /dev/null

		if [ $? = 3 ]; then
			WAKE=etherwake
		else
			echo -e "Neither wakeonlan or etherwake is installed, exitting"
			exit 127
		fi
	fi
}

# Get entries in Database File
function GetTargets()
{
	count=0
	while read host rem; do
		if [ ! "${host}" = "#" ]; then
			targets[${count}]="${host} ${rem}"

			count=$(( ${count} + 1 ))
		fi
	done < "$1"
}

# List hosts in Database File
function ListHosts()
{
	targetcount=${#targets[@]}
	printf "%-15s %-20s %-15s %s\n" "Host" "MAC Address" "Groups" "IP|DNS"
	echo {1..23} | tr [[:digit:]] "#" | tr [[:space:]] "#"
	echo -e "\nShowing : ${targetfile}"
	echo {1..23} | tr [[:digit:]] "#" | tr [[:space:]] "#"
	echo -e ""

	for ((count=0; count < ${targetcount}; ++count)); do
		read host mac groups rem<<eof
${targets[${count}]}
eof
		printf "%-15s %-20s %-15s %s\n" ${host} ${mac} ${groups} ${rem}
	done
}

# AddTarget : Add Target to appropriate list
# Input Parameters: [target]
function AddTarget()
{
	if [ "${groupmode}" = "true" ]; then
		count=${#groups[@]}
		groups[${count}]="$1"
	else
		count=${#hosts[@]}
		hosts[${count}]="$1"
	fi
}

# WakeGroups: Wake listed groups
# Input Parameters: none
function WakeGroups()
{
	for ((count=0; count < ${#groups[@]}; ++count)); do
		wakegroup=${groups[${count}]}

		for ((index=0; index < ${#targets[@]}; ++index)); do
			read host mac groups rem<<eof
${targets[${index}]}
eof
			TFS="${IFS}"
			IFS=","
			for group in ${groups}; do
				if [ "${wakegroup}" = ${group} ]; then
					echo "Waking ${host} from ${group} with ${mac}"
					${WAKE} "${mac}" > /dev/null

					wakecount=$(( ${wakecount} + 1 ))
					[ ! "${rem}" = "" ] && waithosts[${#waithosts[@]}]="${rem}"
				fi
			done

			IFS="${TFS}"
		done
	done
}

# WakeHosts: Wake listed hosts
# Input Parameters: none
function WakeHosts()
{
	for ((count=0; count < ${#hosts[@]}; ++count)); do
		wakehost=${hosts[${count}]}

		for ((index=0; index < ${#targets[@]}; ++index)); do
			read host mac groups rem<<eof
${targets[${index}]}
eof

			if [ "${wakehost}" = ${host} ]; then
        	               	echo "Waking ${host} with ${mac}"
				${WAKE} "${mac}" > /dev/null
				wakecount=$(( ${wakecount} + 1 ))
				[ ! "${rem}" = "" ] && waithosts[${#waithosts[@]}]="${rem}"
			fi
		done
	done
}

# WakeTargets: Wake Targets in Host and Group Lists
# Input Parameters: none
function WakeTargets()
{
	WakeGroups
	WakeHosts

	if [ ${PingWait} -gt 0 -a ${#waithosts[@]} -gt 0 ]; then
		echo -e "Waiting for hosts to be pingable..."
		pingcount=0
		hsts=0

		while [ ${pingcount} -lt 180 -a ${#waithosts[@]} -gt 0 ]; do
			for ((index=0; index < ${#waithosts[@]}; ++index)); do
				hst=${waithosts[${index}]}
				echo -e "Pinging ${hst}"

				if [ ! "${hst}" = "" ]; then
					ping -c 1 ${hst} > /dev/null

					if [ $? -eq 0 ]; then
						echo -e "${hst} is up"
						unset waithosts[${index}]
						hsts=$(( ${hsts} + 1 ))
					fi
				fi
			done
			[ ${#waithosts[@]} -gt 0 ] && sleep 1;
			pingcount=$(( ${pingcount} + 1 ))
		done

		[ ${hsts} -gt 0 ] && echo -e "${hsts} hosts up"
	fi

	[ ${wakecount} -eq 0 ] && echo -e "No matching groups or hosts found, nothing WOLed"
}

#
# Main Loop
#

if [ -e ~/.wolablehosts -o -e ${SYSTEMDB} ]; then
	if [ -e ~/.wolablehosts ]; then
		targetfile=~/.wolablehosts
	else
		targetfile=${SYSTEMDB}
	fi

	GetTargets "${targetfile}"

	while [ ! "$1" = "" ]; do
		case "$1" in
		"-h"|"help"|"")
			Usage
			exit 0 ;;
		"wait")	PingWait=1 ;;
		"list")
			ListHosts
			exit 0 ;;
		"-c")
			ConvertFile "$2"
			exit 0 ;;
		"group")
			groupmode=true
			;;
		"host")
			groupmode=false
			;;
		*)
			AddTarget "$1"
			;;
		esac
		shift 1
	done

	FindTool

	WakeTargets
else
        echo "No list of wol-able hosts found"
fi

